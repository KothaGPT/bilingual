[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "bilingual"
version = "0.1.0"
description = "High-quality Bangla and English NLP toolkit for production use"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Apache-2.0"}
authors = [
    {name = "Bilingual Project Contributors", email = "bilingual@example.com"}
]
maintainers = [
    {name = "Bilingual Project Contributors", email = "bilingual@example.com"}
]
keywords = [
    "nlp",
    "bangla",
    "bengali",
    "bilingual",
    "multilingual",
    "tokenization",
    "translation",
    "language-model"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: Linguistic",
]

dependencies = [
    "numpy>=1.20.0",
    "sentencepiece>=0.1.96",
    "regex>=2021.0.0",
    "tqdm>=4.62.0",
    "requests>=2.26.0",
]

[project.optional-dependencies]
torch = [
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "accelerate>=0.20.0",
]
tensorflow = [
    "tensorflow>=2.10.0",
    "transformers>=4.30.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0",
]
docs = [
    "sphinx>=4.5.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
all = [
    "bilingual[torch,dev,docs]",
]

[project.urls]
Homepage = "https://github.com/YOUR_ORG/bilingual"
Documentation = "https://bilingual.readthedocs.io"
Repository = "https://github.com/YOUR_ORG/bilingual"
Issues = "https://github.com/YOUR_ORG/bilingual/issues"
Changelog = "https://github.com/YOUR_ORG/bilingual/releases"

[project.scripts]
bilingual = "bilingual.cli:main"

[tool.setuptools]
packages = ["bilingual"]

[tool.setuptools.package-data]
bilingual = ["py.typed", "data/*", "models/*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | \.eggs
  | \.tox
  | build
  | dist
  | __pycache__
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sentencepiece.*",
    "transformers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--cov=bilingual",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]

[tool.coverage.run]
source = ["bilingual"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
